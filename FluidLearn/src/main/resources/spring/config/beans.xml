<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context-2.5.xsd">
	
	<!-- Database Configuration -->
	<import resource="../database/DataSource.xml"/>
	<import resource="../database/Hibernate.xml"/>
	
	<!-- Auto scan the components -->
	<context:component-scan 
		base-package="org.fluidlearn.core" />



	<!-- specifica del transictionalManager -->
	<!-- responsabile delle transazioni. Crea e gestisce le transazioni attraverso 
		un datasource Questo di Hibernate Ã¨ in grado di operare tramite una session 
		factory Occorre, inoltre, specificare le direttive di transazione tramite 
		tx:annotation-driver -->

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<!-- Proxy verso il target object per AOP -->
	
		<!-- Abilitazione auto-proxy -->
		<aop:aspectj-autoproxy proxy-target-class="true"/>
	
		<!-- Definizione LogAspect -->
  		<bean class="org.fluidlearn.core.aop.LogAspect" />

</beans>